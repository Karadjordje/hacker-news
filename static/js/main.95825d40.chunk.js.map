{"version":3,"sources":["utils/request.js","state/stories.js","state/store.js","components/Header/Header.js","pages/HomePage/components/NewsComments/NewsComments.js","pages/HomePage/components/NewsItem/NewsItemFakeContent.js","pages/HomePage/components/NewsItem/NewsItem.js","utils/utilities.js","components/Paging/Paging.js","components/Icon/SvgComponents/SvgSpinnerAuto.js","components/Icon/Icon.js","pages/HomePage/components/NewsList/NewsList.js","pages/HomePage/HomePageContainer.js","HackerNews.js","index.js","assets/images/refresh.svg"],"names":["request","url","SUCCESS","FAILURE","options","call","fetch","res","status","json","payload","put","type","error","message","rootSaga","fetchStories","fetchStory","refreshLoop","fetchCurrentStories","fetchStoriesQueue","combineReducers","list","state","action","storyById","reduce","acc","id","story","loading","page","all","takeEvery","takeLatest","chan","take","delay","ms","select","stories","end","i","actionChannel","fork","useChangePage","nextPage","dispatch","useDispatch","useCallback","sagaMiddleware","createSagaMiddleware","middlewares","rootReducer","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","storiesSaga","run","Header","refresh","useRefresh","className","onClick","src","Refresh","alt","NewsComments","items","hackerNewsCommentsUrl","href","target","rel","length","NewsItemFakeContent","NewsItem","newsNumber","useSelector","sanitaze","title","replace","split","score","by","formatDistanceToNow","Date","time","kids","Paging","allStories","next","prev","scrollToTop","window","scrollTo","lastPage","defaultProps","viewBox","pathClassName","SvgSpinnerAuto","props","svgProps","d","attributeName","from","to","dur","repeatCount","icon","Icon","mergedProps","children","iconProps","SvgIcon","SvgIcons","formattedClassName","cx","NewsList","useFetchStories","useEffect","start","slice","map","key","HomePageContainer","HackerNews","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.95825d40.chunk.js","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nfunction* request(url, [SUCCESS, FAILURE], options = {}) {\n    try {\n        const res = yield call(fetch, url, options);\n        if (res.status === 200) {\n            const payload = yield res.json();\n            yield put({\n                type: SUCCESS,\n                payload,\n            });\n        }\n    } catch (e) {\n        yield put({\n            type: FAILURE,\n            error: e.message || e,\n        });\n    }\n}\n\nexport default request;\n","import { combineReducers } from 'redux';\nimport {\n    takeEvery, put, select, all, actionChannel, fork, take, takeLatest, delay,\n} from 'redux-saga/effects';\nimport { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport ms from 'ms';\nimport request from '../utils/request';\n\nconst FETCH_STORIES = 'FETCH_STORIES';\nconst FETCH_STORIES_SUCCESS = 'FETCH_STORIES_SUCCESS';\nconst FETCH_STORIES_FAILURE = 'FETCH_STORIES_FAILURE';\n\nconst FETCH_STORY = 'FETCH_STORY';\nconst FETCH_STORY_SUCCESS = 'FETCH_STORY_SUCCESS';\nconst FETCH_STORY_FAILURE = 'FETCH_STORY_FAILURE';\n\nconst REFRESH = 'REFRESH';\nconst CHANGE_PAGE = 'CHANGE_PAGE';\n\nexport const ITEMS_PER_PAGE = 20;\n\n// const delay = (timeout) => new Promise(resolve => setTimeout(resolve, timeout));\n\nexport const fetchStoriesAction = () => ({\n    type: FETCH_STORIES,\n});\n\nexport const fetchStoryAction = (id) => ({\n    type: FETCH_STORY,\n    id,\n});\n\nexport const refreshAction = () => ({\n    type: REFRESH,\n});\n\nexport const changePageAction = (payload) => ({\n    type: CHANGE_PAGE,\n    payload,\n});\n\nconst listReducer = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_STORIES_SUCCESS:\n            return [\n                ...action.payload,\n            ];\n        default:\n            return state;\n    }\n};\n\nconst storyByIdReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_STORIES_SUCCESS:\n            return {\n                ...state,\n                ...action.payload.reduce((acc, id) => {\n                    acc[id] = {\n                        ...(state[id] || {\n                            story: {},\n                            loading: true,\n                        }),\n                    };\n                    return acc;\n                }, {}),\n            };\n        case FETCH_STORY_SUCCESS:\n            return {\n                ...state,\n                [action.payload.id]: {\n                    ...(state[action.payload.id] || {}),\n                    loading: false,\n                    error: null,\n                    story: {\n                        ...action.payload,\n                    },\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nexport const pageReducer = (state = 1, action) => {\n    switch (action.type) {\n        case CHANGE_PAGE:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    list: listReducer,\n    storyById: storyByIdReducer,\n    page: pageReducer,\n});\n\nexport function* rootSaga() {\n    yield all([\n        takeEvery([FETCH_STORIES, REFRESH], fetchStories),\n        fetchStoriesQueue(),\n        takeLatest(FETCH_STORIES, refreshLoop),\n        takeLatest([FETCH_STORIES_SUCCESS, CHANGE_PAGE], fetchCurrentStories),\n    ]);\n}\n\nfunction* fetchStories() {\n    yield request('https://hacker-news.firebaseio.com/v0/topstories.json', [FETCH_STORIES_SUCCESS, FETCH_STORIES_FAILURE]);\n}\n\nfunction* fetchStory(chan) {\n    while (true) {\n        const { id } = yield take(chan);\n        yield request(`https://hacker-news.firebaseio.com/v0/item/${id}.json`, [FETCH_STORY_SUCCESS, FETCH_STORY_FAILURE]);\n    }\n}\n\nfunction* refreshLoop() {\n    yield delay(ms('30s'));\n    yield put(fetchStoriesAction());\n}\n\nfunction* fetchCurrentStories() {\n    const { page, list } = yield select(({ stories }) => stories);\n    const start = ITEMS_PER_PAGE * (page - 1);\n    const end = ITEMS_PER_PAGE * page;\n\n    for (let i = start; i < end; i++) {\n        yield put(fetchStoryAction(list[i]));\n    }\n}\n\nfunction* fetchStoriesQueue() {\n    const chan = yield actionChannel(FETCH_STORY);\n\n    for (let i = 0; i < 3; i++) {\n        yield fork(fetchStory, chan);\n    }\n}\n\nexport const useFetchStories = () => {\n    const dispatch = useDispatch();\n    return useCallback(\n        () => {\n            dispatch(fetchStoriesAction());\n        },\n        [dispatch],\n    );\n};\n\nexport const useRefresh = () => {\n    const dispatch = useDispatch();\n    return useCallback(\n        () => {\n            dispatch(refreshAction());\n        },\n        [dispatch],\n    );\n};\n\nexport const useChangePage = (nextPage) => {\n    const dispatch = useDispatch();\n    return useCallback(\n        () => {\n            dispatch(changePageAction(nextPage));\n        },\n        [dispatch, nextPage],\n    );\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { all } from 'redux-saga/effects';\nimport stories, { rootSaga as storiesSaga } from './stories';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [\n    sagaMiddleware,\n];\n\nconst rootReducer = combineReducers({\n    stories,\n});\n\nconst composeEnhancers = composeWithDevTools({});\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(...middlewares),\n    ),\n);\n\nfunction* rootSaga() {\n    yield all([\n        storiesSaga(),\n    ]);\n}\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport Refresh from '../../assets/images/refresh.svg';\nimport { useRefresh } from '../../state/stories';\nimport './header.scss';\n\nexport const Header = () => {\n    const refresh = useRefresh();\n\n    const handleClick = () => {\n        refresh();\n    };\n\n    return (\n        <header className=\"header\">\n            <h1 className=\"header__title\">HackerNews</h1>\n            <button className=\"header__btn\" onClick={handleClick}>\n                <img className=\"header__btn__icon\" src={Refresh} alt=\"Refresh icon\"/>\n            </button>\n        </header>\n    );\n};\n","import React from 'react';\n\nexport const NewsComments = ({ id, items, className }) => {\n    const hackerNewsCommentsUrl = `https://news.ycombinator.com/item?id=${id}`;\n\n    return (\n        <a\n            href={hackerNewsCommentsUrl}\n            className={`${className}__comments`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {items && items.length ? `${items.length} comments` : 'discuss'}\n        </a>\n    );\n};\n","import React from 'react';\nimport './fake-content.scss';\n\nexport const NewsItemFakeContent = () => (\n    <div className=\"fake-content\">\n        <span className=\"fake-content__number\" />\n        <div className=\"fake-content__data\">\n            <div className=\"fake-content__title\" />\n            <div className=\"fake-content__info\" />\n        </div>\n    </div>\n);\n","import React from 'react';\nimport sanitaze from 'sanitize-html';\nimport { useSelector } from 'react-redux';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { getDomainName } from '../../../../utils/utilities';\nimport { NewsComments } from '../NewsComments';\nimport { NewsItemFakeContent } from './NewsItemFakeContent';\nimport './news-item.scss';\n\nexport const NewsItem = ({ id, newsNumber }) => {\n    const baseClass = 'news-item';\n    const hackerNewsUrl = 'https://news.ycombinator.com';\n    const state = useSelector(({ stories }) => stories.storyById[id] || {});\n\n    const { story } = state;\n    const loading = state.loading || !story;\n\n    if (state.error) {\n        return state.error;\n    }\n\n    if (loading) {\n        return (\n            <NewsItemFakeContent />\n        );\n    }\n\n    return (\n        <div className=\"news-item\">\n            <span className=\"news-item__number\">\n                {newsNumber + 1}.\n            </span>\n            <div className=\"news-item__data\">\n                <h1 className=\"news-item__title\">\n                    {loading ? <div className=\"fake-content\" /> : <>\n                        <a\n                            className=\"news-item__title__link\"\n                            href={story.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {sanitaze(story.title)} {' '}\n                        </a>\n                        {story.url && <span className=\"news-item__title__source\">({getDomainName(story.url)})</span>}\n                    </>}\n                </h1>\n                <div className=\"news-item__info\">\n                    {loading ? <div className=\"fake-content\" /> : <>\n                        <span className=\"news-item__info__text\">\n                            {story.score} points {' '}\n                        </span>\n                        <span className=\"news-item__info__text\">\n                            <span className=\"news-item__info__text news-item__info__text--gray\">\n                            by {' '}\n                            </span>\n                            <a\n                                className=\"news-item__info__link\"\n                                href={`${hackerNewsUrl}/user?id=${story.by}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                {story.by} {' '}\n                            </a>\n                        </span>\n                        <span className=\"news-item__info__text news-item__info__text--gray\">\n                            {formatDistanceToNow(new Date(story.time * 1000))} | { }\n                        </span>\n                        <NewsComments className={baseClass} id={id} items={story.kids} />\n                    </>}\n                </div>\n            </div>\n        </div>\n    );\n};\n","export const getDomainName = (url) => {\n    const regex = /^(?:https?:\\/\\/)?(?:www\\.)?/i; // Removes protocols plus www\n    return url.replace(regex, '').split('/')[0];\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './paging.scss';\nimport { useChangePage, ITEMS_PER_PAGE } from '../../state/stories';\n\nexport const Paging = () => {\n    const { allStories } = useSelector(({ stories }) => ({\n        allStories: stories.list,\n    }));\n    const page = useSelector(({ stories }) => stories.page);\n    const next = useChangePage(page + 1);\n    const prev = useChangePage(page - 1);\n\n    const scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    const lastPage = allStories.length / ITEMS_PER_PAGE;\n\n    return (\n        <div className=\"paging\">\n            {page !== 1 && <button className=\"paging__btn\" onClick={() => { prev(); scrollToTop(); }}>\n                Prev\n            </button>}\n            {(page !== 1 && page !== lastPage) && ' | '}\n            {page !== lastPage && <button className=\"paging__btn\" onClick={() => { next(); scrollToTop(); }}>\n                More\n            </button>}\n        </div>\n    );\n};\n","import * as React from 'react';\n\nconst defaultProps = {\n    viewBox: '0 0 80 80',\n    pathClassName: 'st0',\n};\n\n/* eslint-disable */\nexport function SvgSpinnerAuto(props) {\n    props = { ...defaultProps, ...props };\n    const { pathClassName, ...svgProps } = props;\n\n    return (\n        <svg {...svgProps}>\n            <path\n                className={pathClassName}\n                d=\"M40,72C22.4,72,8,57.6,8,40C8,22.4,22.4,8,40,8c17.6,0,32,14.4,32,32c0,1.1-0.9,2-2,2s-2-0.9-2-2c0-15.4-12.6-28-28-28S12,24.6,12,40s12.6,28,28,28c1.1,0,2,0.9,2,2S41.1,72,40,72z\"\n            >\n                <animateTransform\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 40 40\"\n                    to=\"360 40 40\"\n                    dur=\"0.7s\"\n                    repeatCount=\"indefinite\"\n                />\n            </path>\n        </svg>\n    );\n}\n/* eslint-enable */\n","import * as React from 'react';\nimport cx from 'classnames';\nimport * as SvgIcons from './SvgComponents/index';\nimport './icon.scss';\n\nconst defaultProps = {\n    icon: 'SvgSpinnerAuto',\n};\n\nconst resolveSvgByType = (type) => {\n    if (!SvgIcons[type]) {\n        return null;\n    }\n\n    return SvgIcons[type];\n};\n\nexport const Icon = (props) => {\n    const mergedProps = { ...defaultProps, ...props };\n    const {\n        className, icon, svgProps, children, ...iconProps\n    } = mergedProps;\n\n    if (!icon) {\n        return null;\n    }\n\n    const SvgIcon = resolveSvgByType(icon);\n    if (!SvgIcon) {\n        return null;\n    }\n\n    const formattedClassName = cx('icon', className);\n\n    return (\n        <i {...iconProps} className={formattedClassName}>\n            <SvgIcon {...svgProps} />\n            {children}\n        </i>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchStories, ITEMS_PER_PAGE } from '../../../../state/stories';\nimport { NewsItem } from '../NewsItem';\nimport { Paging } from '../../../../components/Paging';\nimport { Icon } from '../../../../components/Icon';\nimport './news-list.scss';\n\nexport const NewsList = () => {\n    const { allStories, page } = useSelector(({ stories }) => ({\n        allStories: stories.list,\n        page: stories.page,\n    }));\n    const fetchStories = useFetchStories();\n\n    useEffect(() => {\n        fetchStories();\n    }, [fetchStories]);\n\n    if (!allStories || !allStories.length) {\n        return <p className=\"news-list__spinner\"><Icon icon={'SvgSpinnerAuto'} /></p>;\n    }\n\n    const start = (page - 1) * ITEMS_PER_PAGE;\n    const end = page * ITEMS_PER_PAGE;\n    return (\n        <div className=\"news-list\">\n            {allStories.slice(start, end).map((id, i) => (\n                <NewsItem id={id} key={id} newsNumber={start + i} />\n            ))}\n            <Paging />\n        </div>\n    );\n};\n","import React from 'react';\nimport { Header } from '../../components/Header';\nimport { NewsList } from './components/NewsList';\n\nexport const HomePageContainer = () => (\n    <>\n        <Header/>\n        <NewsList/>\n    </>\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\nimport { HomePageContainer } from './pages/HomePage/HomePageContainer';\n\nexport default function HackerNews() {\n    return (\n        <Provider store={store}>\n            <HomePageContainer />\n        </Provider>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport HackerNews from './HackerNews';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HackerNews />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/refresh.c4a4aa42.svg\";"],"sourceRoot":""}